name: Java CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
        
      - name: Build with Maven
        run: mvn clean install

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
        
      - name: Run tests
        run: mvn test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'

      - name: Deploy to AWS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
        run: |
          # Build Docker image
          docker build -t my-java-app .

          # Authenticate Docker to AWS ECR
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin <your-ecr-repo-url>

          # Tag and push Docker image
          docker tag my-java-app:latest <your-ecr-repo-url>/my-java-app:latest
          docker push <your-ecr-repo-url>/my-java-app:latest

          # Deploy to AWS ECS or any other service
          # Example: Update ECS service
          aws ecs update-service --cluster <your-cluster-name> --service <your-service-name> --force-new-deployment
