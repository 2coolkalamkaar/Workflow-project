name: Java CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Cache Maven dependencies to speed up builds
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # Clean, validate, compile, test, and package the code
      - name: Clean
        run: mvn clean

      - name: Validate
        run: mvn validate

      - name: Compile
        run: mvn compile

      - name: Test
        run: mvn test

      - name: Package
        run: mvn package  

      # Upload build artifacts (e.g., JAR file) for later use in deployment
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: java-app
          path: target/*.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: java-app

      - name: Deploy to AWS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
        run: |
          # Build Docker image
          docker build -t my-java-app .

          # Authenticate Docker to AWS ECR
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin <your-ecr-repo-url>

          # Tag and push Docker image
          docker tag my-java-app:latest <your-ecr-repo-url>/my-java-app:latest
          docker push <your-ecr-repo-url>/my-java-app:latest

          # Update ECS service to deploy the new Docker image
          aws ecs update-service --cluster <your-cluster-name> --service <your-service-name> --force-new-deployment
